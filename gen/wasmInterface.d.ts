export type WasmInterface = {
	helloSliceHiHi: (arg0: number[][]) => { type: "Uint32Array", ptr: number, len: number }[], 
	testSubdiv: (arg0: number[][], arg1: [number, number, number, number][]) => { points: [number, number, number, number][], quads: { type: "Uint32Array", ptr: number, len: number }[] }, 
	callNodeGraph: (arg0: { recieved_blueprint?: { nodes: { name: string, function: string, input_links: { field: string, source: { node: { name: string, field: string } } | { input_field: string } | { store_field: string } }[] }[], store: { output_node: string, output_field: string, system_field: string }[], output: { output_node: string, output_field: string, system_field: string }[] }, event?: { mouse_event: { mouse_down: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_up: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_move: { x: number, y: number } } | { mouse_wheel: { x: number, y: number, z: number } } } | { external_node_event: { mouse_event: { mouse_down: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_up: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_move: { x: number, y: number } } | { mouse_wheel: { x: number, y: number, z: number } }, node_name: string } } | { context_event: { option_selected: string } }, keyboard_modifiers: { shift: boolean, control: boolean, alt: boolean, super: boolean }, post_render_event?: { node_dimensions: { node: string, data: { width: number, height: number } }[] } }, arg1: { context_menu: { open: boolean, selected_node?: string, location: { x: number, y: number }, options: string[] }, camera: {  }, blueprint: { nodes: { name: string, function: string, input_links: { field: string, source: { node: { name: string, field: string } } | { input_field: string } | { store_field: string } }[] }[], store: { output_node: string, output_field: string, system_field: string }[], output: { output_node: string, output_field: string, system_field: string }[] }, interaction_state: { node_selection: string[], box_selection?: { start: { x: number, y: number }, end: { x: number, y: number } }, wiggle?: { node: string, location: { x: number, y: number } }, clipboard?: { name: string, function: string, input_links: { field: string, source: { node: { name: string, field: string } } | { input_field: string } | { store_field: string } }[] }[] }, node_dimensions: { node: string, data: { width: number, height: number } }[] }) => { outputs: { smile_test: string, event: { mouse_event: { mouse_down: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_up: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_move: { x: number, y: number } } | { mouse_wheel: { x: number, y: number, z: number } } } | { external_node_event: { mouse_event: { mouse_down: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_up: { location: { x: number, y: number }, button: "left" | "middle" | "right" } } | { mouse_move: { x: number, y: number } } | { mouse_wheel: { x: number, y: number, z: number } }, node_name: string } } | { node_event: { create: { graph_location: { x: number, y: number }, node_name: string, node_type: string } } | { delete: { node_name: string } } | { duplicate: { node_name: string } } | { copy: { node_name: string } } | { paste: { x: number, y: number } } } | { grouping_event: { group: { node_names: string[] } } | { ungroup: { node_names: string[] } } } | null, blueprint: { nodes: { name: string, function: string, input_links: { field: string, source: { node: { name: string, field: string } } | { input_field: string } | { store_field: string } }[] }[], store: { output_node: string, output_field: string, system_field: string }[], output: { output_node: string, output_field: string, system_field: string }[] }, camera: {  }, context_menu: { open: boolean, selected_node?: string, location: { x: number, y: number }, options: string[] }, node_coords: { node: string, data: { x: number, y: number } }[] } | null, store: { context_menu: { open: boolean, selected_node?: string, location: { x: number, y: number }, options: { type: "Uint8Array", ptr: number, len: number }[] }, camera: {  }, blueprint: { nodes: { name: { type: "Uint8Array", ptr: number, len: number }, function: { type: "Uint8Array", ptr: number, len: number }, input_links: { field: { type: "Uint8Array", ptr: number, len: number }, source: { node: { name: { type: "Uint8Array", ptr: number, len: number }, field: { type: "Uint8Array", ptr: number, len: number } } } | { input_field: { type: "Uint8Array", ptr: number, len: number } } | { store_field: { type: "Uint8Array", ptr: number, len: number } } }[] }[], store: { output_node: { type: "Uint8Array", ptr: number, len: number }, output_field: { type: "Uint8Array", ptr: number, len: number }, system_field: { type: "Uint8Array", ptr: number, len: number } }[], output: { output_node: { type: "Uint8Array", ptr: number, len: number }, output_field: { type: "Uint8Array", ptr: number, len: number }, system_field: { type: "Uint8Array", ptr: number, len: number } }[] }, interaction_state: { node_selection: { type: "Uint8Array", ptr: number, len: number }[], box_selection?: { start: { x: number, y: number }, end: { x: number, y: number } }, wiggle?: { node: string, location: { x: number, y: number } }, clipboard?: { name: string, function: string, input_links: { field: string, source: { node: { name: string, field: string } } | { input_field: string } | { store_field: string } }[] }[] }, node_dimensions: { node: { type: "Uint8Array", ptr: number, len: number }, data: { width: number, height: number } }[] } }, 
}